# coding: utf-8

"""
    PUBLIC - Gravscale Public Restful API

    API pública da Gravscale oferece aos usuários a capacidade de se autenticar, visualizar e contratar produtos disponíveis, enviar dados de contratação, escolher formas de pagamento e gerenciar nossos produtos. Além disso, os usuários podem cadastrar chaves SSH e realizar o deploy de um sistema operacional de forma eficiente e segura. Esta API foi projetado para simplificar e agilizar o gerenciamento de recursos proporcionando que a a Gravscale forneça uma experiência integrada e intuitiva para os usuários.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vvcli_sdk.models.page_contract_schema import PageContractSchema

class TestPageContractSchema(unittest.TestCase):
    """PageContractSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageContractSchema:
        """Test PageContractSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageContractSchema`
        """
        model = PageContractSchema()
        if include_optional:
            return PageContractSchema(
                items = [
                    vvcli_sdk.models.contract_schema.ContractSchema(
                        client_id = 56, 
                        key = '', 
                        plan_label = '', 
                        plan_name = '', 
                        product_label = '', 
                        product_name = '', 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        extras_value = 1.337, 
                        plan_value = 1.337, 
                        total_value = 1.337, 
                        status = vvcli_sdk.models.status_contract_schema.StatusContractSchema(
                            label = '', 
                            label_client = '', 
                            name = '', 
                            name_client = '', ), )
                    ],
                total = 0.0,
                page = 1.0,
                size = 1.0,
                pages = 0.0
            )
        else:
            return PageContractSchema(
                items = [
                    vvcli_sdk.models.contract_schema.ContractSchema(
                        client_id = 56, 
                        key = '', 
                        plan_label = '', 
                        plan_name = '', 
                        product_label = '', 
                        product_name = '', 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        extras_value = 1.337, 
                        plan_value = 1.337, 
                        total_value = 1.337, 
                        status = vvcli_sdk.models.status_contract_schema.StatusContractSchema(
                            label = '', 
                            label_client = '', 
                            name = '', 
                            name_client = '', ), )
                    ],
                total = 0.0,
                page = 1.0,
                size = 1.0,
        )
        """

    def testPageContractSchema(self):
        """Test PageContractSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
